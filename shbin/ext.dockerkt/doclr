
#---  FUNCTION  -------------------------------------------------------------------------------------------------------
#          NAME:  doclr
#%   DESCRIPTION:  remove docker images by keywords.
#%   USAGE: doclr [--all|imagename:tag]
#%   REQUIRES: dollc, grep, estrip, sudo, docker, dormc, dormi, dolsi
#----------------------------------------------------------------------------------------------------------------------
_doclr() {
    if [ $# -lt 1 ]; then
        local cnts="$(dollc -b | grep -v : | estrip -u)"
        for cnt in "$cnts"; do
            dormc "$cnt"
        done
        dormi "<none>:<none>"
        dormc "<none>:<none>"
        docker rmi -f $(docker images -f "dangling=true" -q) 2>/dev/null
        dormi "<none>:<none>"

    elif [ "$1" == "-a" ] || [ "$1" == "all" ] || [ "$1" == "--all" ]; then
        dormc --all
        dormi --all
        docker ps -aq --filter 'status=exited' --filter 'name=/[a-z]+_[a-z]+$' | xargs docker rm -f
        sudo docker rmi -f $(docker images -f "dangling=true" -q) 2>/dev/null
        sudo docker image prune -f
        sudo docker volume prune -f
        sudo docker network prune -f
        _doclr
    elif [ -n "$(dolsi "$@")" ]; then
        dormi "$@"
        _doclr
    else
        echo "[doclr]Cannot find any container image matching $@" >&2
        return 1
    fi
}


if [ $# -lt 1 ]; then
    _doclr
else
    _doclr "$@"
fi

unset -f _doclr
exit 0
