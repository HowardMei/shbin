
## require shbin/shc, shbin/iscommand
#---  FUNCTION  -------------------------------------------------------------------------------------------------------
#          NAME:  premove
#%   DESCRIPTION:  Universal package uninstaller for all distros with apt-get, yum and ... under the hood
#%   Usage: premove curl git
#----------------------------------------------------------------------------------------------------------------------
_premove() {
	if [ $# -lt 1 ] ; then
	 echo "Nothing is specified/left to be removed."
	 return 1
	fi
	
	case "$1" in
		-p | --pip | pip)	
			shift
			local pkgname="$1"
			shift
			if iscommand pip 2>/dev/null;then
				echo "Uninstalling $pkgname via pip"
				shc "pip uninstall $pkgname" || echo "$pkgname pip uninstall failed!"
				if [ $# -lt 1 ] ; then
					return 0
				else
					_premove --pip "$@"
					return 1
				fi
			else
				echo "No pip command found. pinstall pip first"
				return 1
			fi
			;;
		-a | --auto | --autoremove | --autoclean | autoclean)
			iscommand apt-get 2>/dev/null && apt-get autoremove -yq && apt-get clean -yq 
			iscommand yum 2>/dev/null yum autoremove -y 
			iscommand pacman 2>/dev/null && pacman -Sc && pacman -R --noconfirm $(pacman -Qdtq) 
			iscommand emerge 2>/dev/null && emerge --depclean 
			iscommand zypper 2>/dev/null && zypper rm -u && zypper pa -n 
			iscommand pkgin 2>/dev/null && pkgin -y autoremove && pkgin -y clean 
			iscommand pkg 2>/dev/null && pkg autoremove -y && pkg clean -y 
			[ -e "/usr/local/sbin/pkg" ] && /usr/local/sbin/pkg autoremove -y && /usr/local/sbin/pkg clean -y 2>/dev/null 
			return 0
			;;
		-- | *)
			local pkgn="$1"
			if ! ispinstalled "$pkgn" 2>/dev/null;then
				echo "$pkgn has already been removed."
				shift
				_premove "$@"
				return 1
			else
				pservice status $pkgn 2>/dev/null | grep -iq 'process [[:digit:]]' && pservice stop "$pkgn"
			fi
			local pkgname="$(pcmdupkg --showpack "$pkgn" 2>/dev/null | tr '\n' ' ')"
			pkgname="${pkgname:=$pkgn}"
			;;
	esac
	
	if iscommand apt-get 2>/dev/null;then
		echo "Uninstalling $pkgname via apt-get"
		shc "apt-get -q -y remove --purge $pkgname" || echo "$pkgname apt-get remove failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	if iscommand yum 2>/dev/null;then
		shc "yum -y remove $pkgname" || echo "$pkgname yum remove failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	if iscommand pacman 2>/dev/null;then
		echo "Uninstalling $pkgname via pacman"
		shc "pacman -Rdd --noconfirm $pkgname" || echo "$pkgname pacman remove failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	if iscommand emerge 2>/dev/null;then
		echo "Uninstalling $pkgname via emerge"
		shc "emerge -Cv $pkgname" || echo "$pkgname emerge remove failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	if iscommand pkgin 2>/dev/null;then
		echo "Uninstalling $pkgname via pkgin"
		shc "pkgin -y remove $pkgname" || echo "$pkgname pkgin remove failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	if iscommand zypper 2>/dev/null;then
		echo "Uninstalling $pkgname via zypper"
		shc "zypper remove $pkgname" || echo "$pkgname zypper remove failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	if iscommand pkg_delete 2>/dev/null;then
		echo "Uninstalling $pkgname via pkg_delete"
	    shc "pkg_delete -f $pkgname" || echo "$pkgname pkg_delete remove failed"
		##pkgng:  /usr/local/sbin/pkg remove -y -r FreeBSD "$pkgname" || echo "/usr/local/sbin/pkg install failed!"
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
	
	if iscommand opkg 2>/dev/null;then
		echo "Uninstalling $pkgname via opkg" >&2
	    shc "opkg remove $pkgname" || echo "$pkgname opkg remove failed" >&2
		shift
		if [ $# -lt 1 ] ; then
			return 0
		else
			_premove "$@"
			return 1
		fi
	fi
}


_premove "$@" 

unset -f _premove 
exit 0
