
## require shbin/abspath
#---  FUNCTION  -------------------------------------------------------------------------------------------------------
#          NAME:  fprepend
#%   DESCRIPTION: Prepend the content to the tail of the given file
#%	 Usage: fprepend 'file.name' 'new_content' OR echo 'new_content' | fprepend 'file.name'
#----------------------------------------------------------------------------------------------------------------------
__ScriptTmp="$(mktemp -d)"
_fprepend() {
    if [ $# -lt 1 ];then
	   echo "Usage: fprepend 'file.name' 'new_content' OR echo 'new_content' | fprepend 'file.name'" >&2
       return 1
    else
       local fn="$(abspath "$1")"
    fi
    if [ ! -r "$fn" ];then
	   echo "$fn is not a valid file or cannot be read!" >&2
	   return 1
	else
	   shift
	fi
	local tmpfn="tpf$(date +%s)"
	bktohome "$fn"
    ##echo "$@" | cat - "$fn" > "$__ScriptTmp/$tmpfn" && \mv -f "$__ScriptTmp/$tmpfn" "$fn"
	if [ $# -lt 1 ];then
    cat > "$__ScriptTmp/$tmpfn" <<EOF
$(cat)
EOF
	else
    cat > "$__ScriptTmp/$tmpfn" <<EOF
$@
EOF
	fi
    cat "$fn" >> "$__ScriptTmp/$tmpfn"
    \mv -f "$__ScriptTmp/$tmpfn" "$fn"
}


if [ $# -lt 1 ]; then
	echo "Usage: fprepend filename newcontent" >&2
elif [ $# -eq 1 ]; then
	_fprepend "$1" "$(cat)"
else
	_fprepend "$@"
fi

unset -f _fprepend
exit 0
