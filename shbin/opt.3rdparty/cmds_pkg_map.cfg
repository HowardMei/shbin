# This file defines common command/package names for instances where they
# differ between package managers. This way the common name can be used in
# any environment and it will be resolved to the correct name. There is
# obviously scenarios where the common name means something else for some
# package manager but that's a minor inconvenience compared to the benefit
# of using a common name.
#
# There is no need to add mappings if the name is the same across all
# supported package managers or if the name is the same as the common name.
#
# There are a lot of common names that are the same across all package managers
# which is nice. This file manages the exceptions.
#
# Format:
# [<common-name>]
#   <package-manager> = <package-name>

[openssh-server]
  pacman = openssh
  brew = openssh

[chromium]
  apt = chromium-browser

[code]
  brew = visual-studio-code

[gparted]
  # Seems like gparted is only available for macOS via live CD
  # TODO: Have an option that shows that the package is not available
  brew = n/a

# nodejs is obviously a bit more common but ... node is shorter :)
[node]
  apt = nodejs
  yum = nodejs
  dnf = nodejs
  pacman = nodejs

[openjdk]
  apt = openjdk-21-jdk
  yum = java-21-openjdk
  dnf = java-21-openjdk
  pacman = jdk-openjdk

[python]
  apt = python3
  snap = python3
  yum = python3
  dnf = python3

[python-is-python3]
 yum = python-unversioned-command
  dnf = python-unversioned-command
  # pacman = ? might need a script to change the symlink
  brew = python

[pip]
  apt = python3-pip
  yum = python3-pip
  dnf = python3-pip
  pacman = python-pip
  # In brew pip is installed with python
  brew = python

[build-essential]
  # In brew maybe a script would be needed, sorry brew all ya get is cmake for now :)
  brew = cmake
  # TODO: Figure out how to handle group installs
  #yum = "groupinstall 'Development Tools'"
  #dnf = "groupinstall 'Development Tools'"
  pacman = base-devel

[docker]
  apt = docker.io
