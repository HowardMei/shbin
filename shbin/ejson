
#---  FUNCTION  -------------------------------------------------------------------------------------------------------
#          NAME:  ejson
#%   DESCRIPTION:  Parse and extract key value pairs from json string/file.
#%	 Usage: echo "json_string" | ejson [-k|-v|--keys|--values]  OR  ejson [-k|-v|--keys|--values] jsonfile
#----------------------------------------------------------------------------------------------------------------------

if [ $# -lt 1 ]; then
	echo "$(cat)" | jqx
elif [ $# -eq 1 ]; then
	if [ -f "$1" ]; then
		cat "$1" | jqx
	else
		case "$1" in
			-k | --key | --keys)
			echo "$(cat)" | jqx -c '[paths|.[0:5]]|unique[]' | estrips -q | estrips -m '[' | estrips -m ']' | sed 's/,/./g'
			;;
			-v | --value | --values)
			echo "$(cat)" | jqx
			;;
			-- | *)
			echo "$(cat)" | jqx ."$1"
			;;
		esac
	fi
elif [ $# -eq 2 ]; then
	if [ -f "$2" ]; then
		cat "$2" | ejson "$1"
	else
		case "$1" in
			-k | --key | --keys)
				shift
				echo "$(cat)" | jqx -c '[paths|.[0:5]]|unique[]' | estrips -q | estrips -m '[' | estrips -m ']' | sed 's/,/./g' | efilter -rl "$1"
			;;
			-v | --value | --values)
				shift
				echo "$(cat)" | jqx ."$1"
			;;
			-- | *)
				jqx "$@"
			;;
		esac
	fi
else
	opts="$@"
	fopt="$(ecol "$#" "$opts")"
	shift
	newopts="$(ecol :"$#" "$opts")"
	if [ -f "$fopt" ]; then
		cat "$fopt" | ejson $newopts 
	else
		echo "$(cat)" | ejson $opts 
	fi
fi

unset fopt opts newopts
exit 0
